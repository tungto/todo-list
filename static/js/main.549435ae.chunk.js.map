{"version":3,"sources":["actions.js","ultils/helpers.js","reducers/task_reducer.js","context/task_context.js","components/BuldAction/BuldAction.js","components/Header/Header.js","components/SearchBar/SearchBar.js","components/TaskForm/TaskForm.js","components/TaskItem/TaskItem.js","components/TaskList/TaskList.js","pages/HomePage/HomePage.js","pages/AddTaskItemPage/AddTaskItemPage.js","App.js","reportWebVitals.js","index.js"],"names":["LOAD_TASKS","ADD_TASK","REMOVE_TASK","UPDATE_TASK","EDIT_TASK","SELECT_TASK","SORT_TASKS","REMOVE_SELECTED_TASKS","FILTER_TASKS","UPDATE_FILTERS","randomID","S4","Math","random","toString","substring","findTaskIndex","array","findItem","itemIndex","forEach","item","index","id","updateLocalStorage","name","value","localStorage","setItem","JSON","stringify","task_reducer","state","action","type","Types","tasks","payload","filtered_tasks","console","log","newTaskList","filter","task","editTaskIndex","isEditing","updatedTaskIndex","updatedTaskList","updatedselectedItems","selectedItems","map","isSelected","filters","tempTasks","text","searchResults","title","toLowerCase","startsWith","sortedTasks","sort","a","b","dueDate","parse","Date","Error","getLocalStorage","getItem","initialState","TaskContext","React","createContext","TaskProvider","children","useReducer","reducer","dispatch","useEffect","Provider","addTask","removeTask","updateTask","editTask","selectTask","removeSelectedTasks","updateFilters","e","target","useTaskContext","useContext","BuldAction","className","onClick","Header","to","exact","SearchBar","placeholder","onChange","description","priority","TaskForm","props","useState","setstate","onSubmit","preventDefault","setIsEditing","history","goBack","htmlFor","selected","date","dateFormat","TaskItem","checked","TaskList","HomePage","length","AddTaskItemPage","match","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549435ae.chunk.js","sourcesContent":["export const LOAD_TASKS = 'LOAD_TASKS';\r\nexport const OPEN_SIDEBAR = 'OPEN_SIDEBAR';\r\nexport const CLOSE_SIDEBAR = 'CLOSE_SIDEBAR';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const SELECT_TASK = 'SELECT_TASK';\r\nexport const SORT_TASKS = 'SORT_TASKS';\r\nexport const REMOVE_SELECTED_TASKS = 'REMOVE_SELECTED_TASKS';\r\nexport const SHOW_BUILD_ACTION = 'SHOW_BUILD_ACTION';\r\nexport const FILTER_TASKS = 'FILTER_TASKS';\r\nexport const UPDATE_FILTERS = 'UPDATE_FILTERS';\r\n","export const randomID = () => {\r\n  var S4 = function () {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  };\r\n  return (\r\n    S4() +\r\n    S4() +\r\n    '-' +\r\n    S4() +\r\n    '-' +\r\n    S4() +\r\n    '-' +\r\n    S4() +\r\n    '-' +\r\n    S4() +\r\n    S4() +\r\n    S4()\r\n  );\r\n};\r\n\r\nexport const findTaskIndex = (array, findItem) => {\r\n  let itemIndex = -1;\r\n  array.forEach((item, index) => {\r\n    if (item.id === findItem.id) {\r\n      itemIndex = index;\r\n    }\r\n  });\r\n  return itemIndex;\r\n};\r\n\r\nexport const updateLocalStorage = (name, value) => {\r\n  localStorage.setItem(`${name}`, JSON.stringify(value));\r\n};\r\n","import * as Types from '../actions';\r\nimport { findTaskIndex } from '../ultils/helpers';\r\n\r\nconst task_reducer = (state, action) => {\r\n  if (action.type === Types.LOAD_TASKS) {\r\n    return { ...state, tasks: action.payload, filtered_tasks: action.payload };\r\n  }\r\n\r\n  if (action.type === Types.ADD_TASK) {\r\n    return { ...state, tasks: [...state.tasks, action.payload] };\r\n  }\r\n  if (action.type === Types.REMOVE_TASK) {\r\n    console.log('check');\r\n    const newTaskList = state.tasks.filter(\r\n      (task) => task.id !== action.payload\r\n    );\r\n    console.log(typeof action.payload);\r\n    return { ...state, tasks: newTaskList };\r\n  }\r\n\r\n  if (action.type === Types.EDIT_TASK) {\r\n    const editTaskIndex = findTaskIndex(state.tasks, action.payload);\r\n    state.tasks[editTaskIndex].isEditing = true;\r\n    return { ...state };\r\n  }\r\n\r\n  if (action.type === Types.UPDATE_TASK) {\r\n    console.log('update reducer');\r\n    const updatedTaskIndex = findTaskIndex(state.tasks, action.payload);\r\n    const updatedTaskList = [...state.tasks];\r\n    updatedTaskList[updatedTaskIndex] = action.payload;\r\n    return {\r\n      ...state,\r\n      tasks: updatedTaskList,\r\n    };\r\n  }\r\n\r\n  if (action.type === Types.SELECT_TASK) {\r\n    let updatedselectedItems = state.selectedItems;\r\n    const updatedTaskList = state.tasks.map((task) => {\r\n      if (task.id === action.payload) {\r\n        if (!task.isSelected) {\r\n          console.log('add');\r\n          updatedselectedItems += 1;\r\n        } else {\r\n          console.log('subtract');\r\n          updatedselectedItems -= 1;\r\n        }\r\n        return { ...task, isSelected: !task.isSelected };\r\n      }\r\n      return task;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      tasks: updatedTaskList,\r\n      selectedItems: updatedselectedItems,\r\n    };\r\n  }\r\n\r\n  if (action.type === Types.REMOVE_SELECTED_TASKS) {\r\n    const updatedTaskList = state.tasks.filter((task) => !task.isSelected);\r\n    console.log(updatedTaskList);\r\n    return { ...state, tasks: updatedTaskList, selectedItems: 0 };\r\n  }\r\n\r\n  if (action.type === Types.UPDATE_FILTERS) {\r\n    const { name, value } = action.payload;\r\n    console.log(name, value);\r\n    return { ...state, filters: { ...state.filters, [name]: value } };\r\n  }\r\n\r\n  if (action.type === Types.FILTER_TASKS) {\r\n    const tempTasks = [...state.tasks];\r\n    const { text } = state.filters;\r\n    const searchResults = tempTasks.filter((task) => {\r\n      return task.title.toLowerCase().startsWith(text);\r\n    });\r\n\r\n    console.log('filter taks');\r\n    return {\r\n      ...state,\r\n      filtered_tasks: searchResults,\r\n    };\r\n  }\r\n\r\n  if (action.type === Types.SORT_TASKS) {\r\n    let sortedTasks = [...state.filtered_tasks];\r\n    const { sort } = state;\r\n    if (sort === 'due-date') {\r\n      sortedTasks = sortedTasks.sort((a, b) => {\r\n        if (typeof a.dueDate === 'object' && a.dueDate !== null) {\r\n          a.dueDate = JSON.parse(JSON.stringify(a.dueDate));\r\n        }\r\n        if (typeof b.dueDate === 'object' && b.dueDate !== null) {\r\n          b.dueDate = JSON.parse(JSON.stringify(b.dueDate));\r\n        }\r\n\r\n        return new Date(a.dueDate) - new Date(b.dueDate);\r\n      });\r\n    }\r\n    console.log('sorted taks', sortedTasks);\r\n\r\n    return {\r\n      ...state,\r\n      filtered_tasks: sortedTasks,\r\n    };\r\n  }\r\n\r\n  throw new Error(`No Matching ${action.type} - action type`);\r\n};\r\n\r\nexport default task_reducer;\r\n","import React, { useContext, useReducer, useEffect } from 'react';\r\nimport reducer from '../reducers/task_reducer';\r\nimport * as Types from '../actions';\r\nimport { updateLocalStorage } from '../ultils/helpers';\r\n\r\nconst getLocalStorage = () => {\r\n  let tasks = localStorage.getItem('tasks');\r\n  let selectedItems = localStorage.getItem('selectedItems');\r\n  if (tasks) {\r\n    return {\r\n      tasks: JSON.parse(tasks),\r\n      selectedItems: JSON.parse(selectedItems),\r\n    };\r\n  } else {\r\n    return {\r\n      tasks: [],\r\n      selectedItems: 0,\r\n    };\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  tasks: getLocalStorage().tasks,\r\n  selectedItems: getLocalStorage().selectedItems,\r\n  filtered_tasks: [],\r\n  filters: {\r\n    text: '',\r\n  },\r\n  sort: 'due-date',\r\n};\r\n\r\nconst TaskContext = React.createContext();\r\n\r\nconst TaskProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: Types.LOAD_TASKS, payload: state.tasks });\r\n  }, [state.tasks]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: Types.FILTER_TASKS });\r\n    dispatch({ type: Types.SORT_TASKS });\r\n  }, [state.sort, state.filters, state.tasks]);\r\n\r\n  useEffect(() => {\r\n    updateLocalStorage('tasks', state.tasks);\r\n    updateLocalStorage('selectedItems', state.selectedItems);\r\n  }, [state.tasks, state.selectedItems]);\r\n\r\n  const addTask = (task) => {\r\n    dispatch({ type: Types.ADD_TASK, payload: task });\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    dispatch({ type: Types.REMOVE_TASK, payload: id });\r\n  };\r\n\r\n  const updateTask = (task) => {\r\n    console.log('update task', task);\r\n    dispatch({ type: Types.UPDATE_TASK, payload: task });\r\n    updateLocalStorage('tasks', state.tasks);\r\n  };\r\n\r\n  const editTask = (id) => {\r\n    dispatch({ type: Types.EDIT_TASK, payload: id });\r\n  };\r\n\r\n  const selectTask = (id) => {\r\n    dispatch({ type: Types.SELECT_TASK, payload: id });\r\n    updateLocalStorage('tasks', state.tasks);\r\n    updateLocalStorage('selectedItems', state.selectedItems);\r\n  };\r\n\r\n  const removeSelectedTasks = () => {\r\n    dispatch({ type: Types.REMOVE_SELECTED_TASKS });\r\n  };\r\n\r\n  const updateFilters = (e) => {\r\n    console.log(e);\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    dispatch({ type: Types.UPDATE_FILTERS, payload: { name, value } });\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider\r\n      value={{\r\n        ...state,\r\n        addTask,\r\n        removeTask,\r\n        updateTask,\r\n        editTask,\r\n        selectTask,\r\n        removeSelectedTasks,\r\n        updateFilters,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nconst useTaskContext = () => {\r\n  return useContext(TaskContext);\r\n};\r\n\r\nexport { useTaskContext, TaskProvider };\r\n","import React from 'react';\r\nimport { useTaskContext } from '../../context/task_context';\r\n\r\nconst BuldAction = (task) => {\r\n  const { removeSelectedTasks } = useTaskContext();\r\n  // const [isEditing, setIsEditing] = useState(false);\r\n  // const { title, id, isSelected } = task;\r\n\r\n  return (\r\n    <div className='buld-action-container'>\r\n      <button onClick={removeSelectedTasks}>remove</button>\r\n      <button>done</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuldAction;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <Link to='/' exact='true'>\r\n          Home\r\n        </Link>\r\n        <Link to='/add'>Add Todo</Link>\r\n      </nav>\r\n      <div className='title'>Home page</div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { useTaskContext } from '../../context/task_context';\r\n\r\nconst SearchBar = () => {\r\n  const { filters, updateFilters } = useTaskContext();\r\n\r\n  return (\r\n    <div className='search-bar-container'>\r\n      <input\r\n        name='text'\r\n        type='text'\r\n        className='search-bar'\r\n        placeholder='search'\r\n        value={filters.text}\r\n        onChange={updateFilters}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useTaskContext } from '../../context/task_context';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { randomID } from '../../ultils/helpers';\r\n\r\nconst initialState = {\r\n  id: null,\r\n  title: '',\r\n  description: '',\r\n  priority: 'normal',\r\n  dueDate: new Date(),\r\n  isSelected: false,\r\n};\r\n\r\nconst TaskForm = (props) => {\r\n  const { addTask, updateTask } = useTaskContext();\r\n\r\n  const [state, setstate] = useState(initialState);\r\n  const { isEditing } = props;\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      setstate(props.task);\r\n    }\r\n  }, [props.task, isEditing]);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (isEditing) {\r\n      updateTask(state);\r\n      props.setIsEditing(false);\r\n    } else {\r\n      addTask({ ...state, id: randomID() });\r\n      props.history.goBack();\r\n    }\r\n  };\r\n  const { title, description, priority, dueDate } = state;\r\n  return (\r\n    <form className='search-bar-container' onSubmit={submitForm}>\r\n      <input\r\n        type='text'\r\n        placeholder='Add new task'\r\n        className='input-title'\r\n        value={title}\r\n        onChange={(e) => setstate({ ...state, title: e.target.value })}\r\n      />\r\n      <div className='description'>\r\n        <label htmlFor='description'>description</label>\r\n        <input\r\n          type='text'\r\n          placeholder=''\r\n          name='description'\r\n          value={description}\r\n          onChange={(e) => setstate({ ...state, description: e.target.value })}\r\n        />\r\n      </div>\r\n      <div className='other-infos'>\r\n        <div className='due-date'>\r\n          <label htmlFor='date'>Due Date</label>\r\n          <DatePicker\r\n            selected={Date.parse(dueDate)}\r\n            onChange={(date) => setstate({ ...state, dueDate: date })}\r\n            dateFormat='d MMMM yyyy'\r\n          />\r\n        </div>\r\n        <div className='priority'>\r\n          <label htmlFor='priority'>priority</label>\r\n          <select\r\n            value={priority}\r\n            onChange={(e) => setstate({ ...state, priority: e.target.value })}\r\n          >\r\n            <option value='low'>low</option>\r\n            <option value='normal'>normal</option>\r\n            <option value='high'>high</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <button type='submit'>{`${isEditing ? 'update' : 'add'}`}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useState } from 'react';\r\nimport TaskForm from '../TaskForm/TaskForm';\r\nimport { useTaskContext } from '../../context/task_context';\r\n\r\nconst TaskItem = (task) => {\r\n  const { removeTask, selectTask } = useTaskContext();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const { title, id, isSelected, dueDate } = task;\r\n\r\n  return (\r\n    <div className='task-container'>\r\n      <div className='task'>\r\n        <input\r\n          type='checkbox'\r\n          name='checkbox'\r\n          checked={isSelected}\r\n          onChange={() => selectTask(id, isSelected)}\r\n        />\r\n        <p className='task-title'>{title}</p>\r\n        <p className='task-title'>{dueDate}</p>\r\n        <div className='buttons'>\r\n          <button onClick={() => setIsEditing(true)}>detail</button>\r\n          <button onClick={() => removeTask(id)}>remove</button>\r\n        </div>\r\n      </div>\r\n      {isEditing && (\r\n        <TaskForm\r\n          task={task}\r\n          isEditing={isEditing}\r\n          setIsEditing={setIsEditing}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport { useTaskContext } from '../../context/task_context';\r\nimport TaskItem from '../TaskItem/TaskItem';\r\n\r\nconst TaskList = () => {\r\n  const { filtered_tasks } = useTaskContext();\r\n  console.log(filtered_tasks);\r\n  return (\r\n    <div className='search-bar-container'>\r\n      {filtered_tasks.map((task, index) => {\r\n        return <TaskItem key={index} {...task} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BuldAction from '../../components/BuldAction/BuldAction';\r\nimport Header from '../../components/Header/Header';\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport TaskList from '../../components/TaskList/TaskList';\r\nimport { useTaskContext } from '../../context/task_context';\r\n\r\nconst HomePage = () => {\r\n  const { tasks, selectedItems } = useTaskContext();\r\n  if (!tasks || tasks.length < 1) {\r\n    return (\r\n      <div>\r\n        <h1>there is no tasks</h1>\r\n        <Link to='/add' exact='true'>\r\n          fill it\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className='search-bar-container'>\r\n      <Header />\r\n      <h1>Home</h1>\r\n      <SearchBar />\r\n      <TaskList />\r\n      {selectedItems > 0 && <BuldAction />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport TaskForm from '../../components/TaskForm/TaskForm';\r\n\r\nconst AddTaskItemPage = (props) => {\r\n  console.log(props.match, props.history);\r\n  return (\r\n    <div className='add-task-container'>\r\n      <h1>Add</h1>\r\n      <TaskForm match={props.match} history={props.history} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskItemPage;\r\n","import './App.css';\nimport { Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport AddTaskItemPage from './pages/AddTaskItemPage/AddTaskItemPage';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <BrowserRouter>\n        <Route\n          path='/'\n          component={({ match }) => <HomePage match={match} />}\n          exact={true}\n        />\n        <Route\n          path='/add'\n          component={({ match, history }) => (\n            <AddTaskItemPage match={match} history={history} />\n          )}\n          exact={true}\n        />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { TaskProvider } from './context/task_context';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TaskProvider>\n      <App />\n    </TaskProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}