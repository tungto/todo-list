{"version":3,"sources":["actions.js","ultils/helpers.js","reducers/task_reducer.js","context/task_context.js","components/BuldAction/BuldAction.js","components/Header/Header.js","components/SearchBar/SearchBar.js","components/TaskForm/TaskForm.js","components/TaskItem/TaskItem.js","components/TaskList/TaskList.js","pages/HomePage/HomePage.js","pages/AddTaskItemPage/AddTaskItemPage.js","App.js","reportWebVitals.js","index.js"],"names":["LOAD_TASKS","ADD_TASK","REMOVE_TASK","UPDATE_TASK","EDIT_TASK","SELECT_TASK","SORT_TASKS","REMOVE_SELECTED_TASKS","FILTER_TASKS","UPDATE_FILTERS","randomID","S4","Math","random","toString","substring","findTaskIndex","array","findItem","itemIndex","forEach","item","index","id","updateLocalStorage","name","value","localStorage","setItem","JSON","stringify","task_reducer","state","action","type","Types","tasks","payload","filtered_tasks","console","log","newTaskList","filter","task","editTaskIndex","isEditing","updatedTaskIndex","updatedTaskList","updatedselectedItems","selectedItems","map","isSelected","filters","tempTasks","text","searchResults","title","toLowerCase","startsWith","sortedTasks","sort","a","b","dueDate","parse","Date","Error","getLocalStorage","getItem","initialState","TaskContext","React","createContext","TaskProvider","children","useReducer","reducer","dispatch","useEffect","Provider","addTask","removeTask","updateTask","editTask","selectTask","removeSelectedTasks","updateFilters","e","target","useTaskContext","useContext","Wrapper","styled","div","BuldAction","className","onClick","NavContainer","Header","to","exact","SearchBar","placeholder","onChange","description","priority","FormContainer","TaskForm","props","useState","setstate","useForm","register","handleSubmit","setValue","errors","formState","onSubmit","setIsEditing","history","push","defaultValue","required","htmlFor","selected","date","dateFormat","minDate","TaskItemContainer","TaskItem","checked","TaskListContainer","TaskList","HomePage","length","AddTaskItemPage","match","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d605a8b5.chunk.js","sourcesContent":["export const LOAD_TASKS = 'LOAD_TASKS';\r\nexport const OPEN_SIDEBAR = 'OPEN_SIDEBAR';\r\nexport const CLOSE_SIDEBAR = 'CLOSE_SIDEBAR';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const SELECT_TASK = 'SELECT_TASK';\r\nexport const SORT_TASKS = 'SORT_TASKS';\r\nexport const REMOVE_SELECTED_TASKS = 'REMOVE_SELECTED_TASKS';\r\nexport const SHOW_BUILD_ACTION = 'SHOW_BUILD_ACTION';\r\nexport const FILTER_TASKS = 'FILTER_TASKS';\r\nexport const UPDATE_FILTERS = 'UPDATE_FILTERS';\r\n","export const randomID = () => {\r\n  var S4 = function () {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  };\r\n  return (\r\n    S4() +\r\n    S4() +\r\n    '-' +\r\n    S4() +\r\n    '-' +\r\n    S4() +\r\n    '-' +\r\n    S4() +\r\n    '-' +\r\n    S4() +\r\n    S4() +\r\n    S4()\r\n  );\r\n};\r\n\r\nexport const findTaskIndex = (array, findItem) => {\r\n  let itemIndex = -1;\r\n  array.forEach((item, index) => {\r\n    if (item.id === findItem.id) {\r\n      itemIndex = index;\r\n    }\r\n  });\r\n  return itemIndex;\r\n};\r\n\r\nexport const updateLocalStorage = (name, value) => {\r\n  localStorage.setItem(`${name}`, JSON.stringify(value));\r\n};\r\n","import * as Types from '../actions';\r\nimport { findTaskIndex } from '../ultils/helpers';\r\n\r\nconst task_reducer = (state, action) => {\r\n  if (action.type === Types.LOAD_TASKS) {\r\n    return { ...state, tasks: action.payload, filtered_tasks: action.payload };\r\n  }\r\n\r\n  if (action.type === Types.ADD_TASK) {\r\n    return { ...state, tasks: [...state.tasks, action.payload] };\r\n  }\r\n  if (action.type === Types.REMOVE_TASK) {\r\n    console.log('check');\r\n    const newTaskList = state.tasks.filter(\r\n      (task) => task.id !== action.payload\r\n    );\r\n    console.log(typeof action.payload);\r\n    return { ...state, tasks: newTaskList };\r\n  }\r\n\r\n  if (action.type === Types.EDIT_TASK) {\r\n    const editTaskIndex = findTaskIndex(state.tasks, action.payload);\r\n    state.tasks[editTaskIndex].isEditing = true;\r\n    return { ...state };\r\n  }\r\n\r\n  if (action.type === Types.UPDATE_TASK) {\r\n    console.log('update reducer');\r\n    const updatedTaskIndex = findTaskIndex(state.tasks, action.payload);\r\n    const updatedTaskList = [...state.tasks];\r\n    updatedTaskList[updatedTaskIndex] = action.payload;\r\n    return {\r\n      ...state,\r\n      tasks: updatedTaskList,\r\n    };\r\n  }\r\n\r\n  if (action.type === Types.SELECT_TASK) {\r\n    let updatedselectedItems = state.selectedItems;\r\n    const updatedTaskList = state.tasks.map((task) => {\r\n      if (task.id === action.payload) {\r\n        if (!task.isSelected) {\r\n          console.log('add');\r\n          updatedselectedItems += 1;\r\n        } else {\r\n          console.log('subtract');\r\n          updatedselectedItems -= 1;\r\n        }\r\n        return { ...task, isSelected: !task.isSelected };\r\n      }\r\n      return task;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      tasks: updatedTaskList,\r\n      selectedItems: updatedselectedItems,\r\n    };\r\n  }\r\n\r\n  if (action.type === Types.REMOVE_SELECTED_TASKS) {\r\n    const updatedTaskList = state.tasks.filter((task) => !task.isSelected);\r\n    console.log(updatedTaskList);\r\n    return { ...state, tasks: updatedTaskList, selectedItems: 0 };\r\n  }\r\n\r\n  if (action.type === Types.UPDATE_FILTERS) {\r\n    const { name, value } = action.payload;\r\n    console.log(name, value);\r\n    return { ...state, filters: { ...state.filters, [name]: value } };\r\n  }\r\n\r\n  if (action.type === Types.FILTER_TASKS) {\r\n    const tempTasks = [...state.tasks];\r\n    const { text } = state.filters;\r\n    const searchResults = tempTasks.filter((task) => {\r\n      return task.title.toLowerCase().startsWith(text);\r\n    });\r\n\r\n    console.log('filter taks');\r\n    return {\r\n      ...state,\r\n      filtered_tasks: searchResults,\r\n    };\r\n  }\r\n\r\n  if (action.type === Types.SORT_TASKS) {\r\n    let sortedTasks = [...state.filtered_tasks];\r\n    const { sort } = state;\r\n    if (sort === 'due-date') {\r\n      sortedTasks = sortedTasks.sort((a, b) => {\r\n        if (typeof a.dueDate === 'object' && a.dueDate !== null) {\r\n          a.dueDate = JSON.parse(JSON.stringify(a.dueDate));\r\n        }\r\n        if (typeof b.dueDate === 'object' && b.dueDate !== null) {\r\n          b.dueDate = JSON.parse(JSON.stringify(b.dueDate));\r\n        }\r\n\r\n        return new Date(a.dueDate) - new Date(b.dueDate);\r\n      });\r\n    }\r\n    // console.log('sorted taks', sortedTasks);\r\n\r\n    return {\r\n      ...state,\r\n      filtered_tasks: sortedTasks,\r\n    };\r\n  }\r\n\r\n  throw new Error(`No Matching ${action.type} - action type`);\r\n};\r\n\r\nexport default task_reducer;\r\n","import React, { useContext, useReducer, useEffect } from 'react';\r\nimport reducer from '../reducers/task_reducer';\r\nimport * as Types from '../actions';\r\nimport { updateLocalStorage } from '../ultils/helpers';\r\n\r\nconst getLocalStorage = () => {\r\n  let tasks = localStorage.getItem('tasks');\r\n  let selectedItems = localStorage.getItem('selectedItems');\r\n  if (tasks) {\r\n    return {\r\n      tasks: JSON.parse(tasks),\r\n      selectedItems: JSON.parse(selectedItems),\r\n    };\r\n  } else {\r\n    return {\r\n      tasks: [],\r\n      selectedItems: 0,\r\n    };\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  tasks: getLocalStorage().tasks,\r\n  selectedItems: getLocalStorage().selectedItems,\r\n  filtered_tasks: [],\r\n  filters: {\r\n    text: '',\r\n  },\r\n  sort: 'due-date',\r\n};\r\n\r\nconst TaskContext = React.createContext();\r\n\r\nconst TaskProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: Types.LOAD_TASKS, payload: state.tasks });\r\n  }, [state.tasks]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: Types.FILTER_TASKS });\r\n    dispatch({ type: Types.SORT_TASKS });\r\n  }, [state.sort, state.filters, state.tasks]);\r\n\r\n  useEffect(() => {\r\n    updateLocalStorage('tasks', state.tasks);\r\n    updateLocalStorage('selectedItems', state.selectedItems);\r\n  }, [state.tasks, state.selectedItems]);\r\n\r\n  const addTask = (task) => {\r\n    dispatch({ type: Types.ADD_TASK, payload: task });\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    dispatch({ type: Types.REMOVE_TASK, payload: id });\r\n  };\r\n\r\n  const updateTask = (task) => {\r\n    console.log('update task', task);\r\n    dispatch({ type: Types.UPDATE_TASK, payload: task });\r\n    updateLocalStorage('tasks', state.tasks);\r\n  };\r\n\r\n  const editTask = (id) => {\r\n    dispatch({ type: Types.EDIT_TASK, payload: id });\r\n  };\r\n\r\n  const selectTask = (id) => {\r\n    dispatch({ type: Types.SELECT_TASK, payload: id });\r\n    updateLocalStorage('tasks', state.tasks);\r\n    updateLocalStorage('selectedItems', state.selectedItems);\r\n  };\r\n\r\n  const removeSelectedTasks = () => {\r\n    dispatch({ type: Types.REMOVE_SELECTED_TASKS });\r\n  };\r\n\r\n  const updateFilters = (e) => {\r\n    console.log(e);\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    dispatch({ type: Types.UPDATE_FILTERS, payload: { name, value } });\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider\r\n      value={{\r\n        ...state,\r\n        addTask,\r\n        removeTask,\r\n        updateTask,\r\n        editTask,\r\n        selectTask,\r\n        removeSelectedTasks,\r\n        updateFilters,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\nconst useTaskContext = () => {\r\n  return useContext(TaskContext);\r\n};\r\n\r\nexport { useTaskContext, TaskProvider };\r\n","import React from 'react';\r\nimport { useTaskContext } from '../../context/task_context';\r\nimport styled from 'styled-components';\r\n\r\nconst BuldAction = (task) => {\r\n  const { removeSelectedTasks } = useTaskContext();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className='buld-action-container'>\r\n        <button className='btn btn-remove-select' onClick={removeSelectedTasks}>\r\n          remove\r\n        </button>\r\n        <button className='btn btn-done'>done</button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled.div`\r\n  .btn {\r\n    width: 100px;\r\n  }\r\n  .btn-remove-select {\r\n    background-color: var(--clr-red-dark);\r\n    margin-right: 1rem;\r\n    :hover {\r\n      background-color: var(--clr-red-light);\r\n    }\r\n  }\r\n  .btn-done {\r\n    background-color: var(--clr-dodger-dark);\r\n    :hover {\r\n      background-color: var(--clr-dodger-light);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BuldAction;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <NavContainer className='navbar'>\r\n      <ul className='nav-links'>\r\n        <li className='link'>\r\n          <Link to='/' exact='true'>\r\n            Home\r\n          </Link>\r\n        </li>\r\n        <li className='link'>\r\n          <Link to='/add'>Add Todo</Link>\r\n        </li>\r\n      </ul>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\nconst NavContainer = styled.div`\r\n  .nav-links {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .link {\r\n    margin: 1rem;\r\n    a {\r\n      padding: 0.5rem;\r\n      font-weight: 500;\r\n      :hover {\r\n        border-bottom: 1px solid var(--clr-black);\r\n      }\r\n    }\r\n  }\r\n  @media (min-width: 800px) {\r\n    padding: 2rem;\r\n  }\r\n`;\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useTaskContext } from '../../context/task_context';\r\nimport styled from 'styled-components';\r\n\r\nconst SearchBar = () => {\r\n  const { filters, updateFilters } = useTaskContext();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className='search-bar-container'>\r\n        <input\r\n          name='text'\r\n          type='text'\r\n          className='search-bar'\r\n          placeholder='Search'\r\n          value={filters.text}\r\n          onChange={updateFilters}\r\n        />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  .search-bar {\r\n    padding: 10px;\r\n    width: 80%;\r\n    border-radius: var(--radius);\r\n    font-size: 1rem;\r\n  }\r\n  @media (min-width: 800px) {\r\n    margin-top: 3rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useTaskContext } from '../../context/task_context';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { randomID } from '../../ultils/helpers';\r\nimport { useForm } from 'react-hook-form';\r\nimport styled from 'styled-components';\r\nimport { BsCalendar } from 'react-icons/bs';\r\n\r\nconst initialState = {\r\n  id: null,\r\n  title: '',\r\n  description: '',\r\n  priority: 'normal',\r\n  dueDate: new Date(),\r\n  isSelected: false,\r\n};\r\n\r\nconst TaskForm = (props) => {\r\n  const { addTask, updateTask } = useTaskContext();\r\n\r\n  const [state, setstate] = useState(initialState);\r\n  const { isEditing } = props;\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      setstate(props.task);\r\n      setValue('title', props.task.title);\r\n    }\r\n  }, [props.task, isEditing]);\r\n\r\n  const submitForm = () => {\r\n    console.log('check');\r\n    if (isEditing) {\r\n      updateTask(state);\r\n      props.setIsEditing(false);\r\n    } else {\r\n      addTask({ ...state, id: randomID() });\r\n      props.history.push('/');\r\n    }\r\n  };\r\n\r\n  const { title, description, priority, dueDate } = state;\r\n  return (\r\n    <FormContainer>\r\n      <form className='add-taks-form' onSubmit={handleSubmit(submitForm)}>\r\n        <input\r\n          type='text'\r\n          placeholder='Add new task'\r\n          className='input-title'\r\n          name='title'\r\n          defaultValue={title}\r\n          {...register('title', { required: true })}\r\n          onChange={(e) => setstate({ ...state, title: e.target.value })}\r\n        />\r\n        {errors.title && <p className='error-msg'>This field is required</p>}\r\n        <div className='description form-section field'>\r\n          <label htmlFor='description'>description</label>\r\n          <textarea\r\n            type='text'\r\n            placeholder=''\r\n            name='description'\r\n            value={description}\r\n            onChange={(e) =>\r\n              setstate({ ...state, description: e.target.value })\r\n            }\r\n          />\r\n        </div>\r\n        <div className='other-infos form-section'>\r\n          <div className='due-date field'>\r\n            <label htmlFor='date'>Due Date</label>\r\n            <div className='date-bar'>\r\n              <DatePicker\r\n                selected={Date.parse(dueDate)}\r\n                onChange={(date) => setstate({ ...state, dueDate: date })}\r\n                dateFormat='d MMMM yyyy'\r\n                minDate={new Date()}\r\n              />\r\n              <BsCalendar />\r\n            </div>\r\n          </div>\r\n          <div className='priority field'>\r\n            <label htmlFor='priority'>priority</label>\r\n            <select\r\n              value={priority}\r\n              onChange={(e) => setstate({ ...state, priority: e.target.value })}\r\n            >\r\n              <option value='low'>low</option>\r\n              <option value='normal'>normal</option>\r\n              <option value='high'>high</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <button type='submit' className='btn btn-add'>{`${\r\n          isEditing ? 'update' : 'add'\r\n        }`}</button>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nconst FormContainer = styled.div`\r\n  .add-taks-form {\r\n    padding: 3rem;\r\n    .input-title {\r\n      padding: 10px;\r\n      width: 80%;\r\n      border-radius: var(--radius);\r\n    }\r\n    .field {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .description {\r\n      textarea {\r\n        height: 125px;\r\n        padding: 0.5rem;\r\n      }\r\n    }\r\n\r\n    .form-section {\r\n      width: 80%;\r\n      margin: 0 auto;\r\n      margin-top: 1rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n    label {\r\n      margin-top: 0.5rem;\r\n      margin-bottom: 0.5rem;\r\n      text-transform: capitalize;\r\n      font-weight: 500;\r\n      text-align: left;\r\n    }\r\n    .other-infos {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      gap: 2rem;\r\n      input,\r\n      select {\r\n        width: 100%;\r\n        padding: 0.5rem;\r\n      }\r\n      .date-bar {\r\n        display: flex;\r\n        position: relative;\r\n        svg {\r\n          width: 34px;\r\n          height: 34px;\r\n          position: absolute;\r\n          right: 6px;\r\n        }\r\n      }\r\n    }\r\n    .btn-add {\r\n      background: var(--clr-red-dark);\r\n      margin-top: 3rem;\r\n      width: 6rem;\r\n      :hover {\r\n        background: var(--clr-red-light);\r\n      }\r\n    }\r\n    .error-msg {\r\n      text-align: left;\r\n      width: 80%;\r\n      color: var(--clr-red-dark);\r\n      margin: 0 auto;\r\n    }\r\n\r\n    @media (max-width: 800px) {\r\n      padding: 1rem 0 1rem 0;\r\n      .btn-add {\r\n        margin-top: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default TaskForm;\r\n","import React, { useState } from 'react';\r\nimport TaskForm from '../TaskForm/TaskForm';\r\nimport { useTaskContext } from '../../context/task_context';\r\nimport styled from 'styled-components';\r\n\r\nconst TaskItem = (task) => {\r\n  const { removeTask, selectTask } = useTaskContext();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const { title, id, isSelected } = task;\r\n\r\n  return (\r\n    <TaskItemContainer className='task-container'>\r\n      <div className={`${isEditing ? 'task task-editing' : 'task'}`}>\r\n        <div className='left-task-item'>\r\n          <input\r\n            type='checkbox'\r\n            name='checkbox'\r\n            className='checkbox'\r\n            checked={isSelected}\r\n            onChange={() => selectTask(id, isSelected)}\r\n          />\r\n          <span className='task-title'>{title}</span>\r\n        </div>\r\n        <div className='buttons'>\r\n          <button\r\n            onClick={() => setIsEditing(!isEditing)}\r\n            className='btn btn-detail'\r\n          >\r\n            detail\r\n          </button>\r\n          <button onClick={() => removeTask(id)} className='btn btn-remove'>\r\n            remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {isEditing && (\r\n        <TaskForm\r\n          task={task}\r\n          isEditing={isEditing}\r\n          setIsEditing={setIsEditing}\r\n        />\r\n      )}\r\n    </TaskItemContainer>\r\n  );\r\n};\r\n\r\nconst TaskItemContainer = styled.div`\r\n  border: 1px solid var(--clr-black);\r\n  border-radius: var(--radius);\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  .task-editing {\r\n    border-bottom: 1px solid var(--clr-black);\r\n  }\r\n  .task {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem;\r\n    @media (max-width: 500px) {\r\n      padding: 0.5rem;\r\n      flex-direction: column;\r\n      .left-task-item {\r\n        margin-bottom: 1rem;\r\n      }\r\n    }\r\n    .left-task-item {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    .checkbox[type='checkbox'] {\r\n      display: inline-block;\r\n      margin-right: 1rem;\r\n      height: 16px;\r\n      width: 16px;\r\n    }\r\n    .task-title {\r\n      text-transform: capitalize;\r\n    }\r\n    .btn-detail {\r\n      margin-right: 1rem;\r\n    }\r\n    .btn-remove {\r\n      background-color: var(--clr-red-dark);\r\n      :hover {\r\n        background-color: var(--clr-red-light);\r\n      }\r\n    }\r\n    .btn-detail {\r\n      background-color: var(--clr-blue-dark);\r\n      :hover {\r\n        background-color: var(--clr-blue-light);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport { useTaskContext } from '../../context/task_context';\r\nimport TaskItem from '../TaskItem/TaskItem';\r\nimport styled from 'styled-components';\r\nconst TaskList = () => {\r\n  const { filtered_tasks } = useTaskContext();\r\n  // console.log(filtered_tasks);\r\n  return (\r\n    <TaskListContainer>\r\n      {filtered_tasks.map((task, index) => {\r\n        return <TaskItem key={index} {...task} />;\r\n      })}\r\n    </TaskListContainer>\r\n  );\r\n};\r\n\r\nconst TaskListContainer = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BuldAction from '../../components/BuldAction/BuldAction';\r\nimport Header from '../../components/Header/Header';\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport TaskList from '../../components/TaskList/TaskList';\r\nimport { useTaskContext } from '../../context/task_context';\r\nimport styled from 'styled-components';\r\n\r\nconst HomePage = () => {\r\n  const { tasks, selectedItems } = useTaskContext();\r\n  if (!tasks || tasks.length < 1) {\r\n    return (\r\n      <div>\r\n        <h1>there is no tasks</h1>\r\n        <Link to='/add' exact='true'>\r\n          fill it\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <div className='home-page section-center'>\r\n        <Header />\r\n        <h3>To Do List</h3>\r\n        <SearchBar />\r\n        <TaskList />\r\n        {selectedItems > 0 && <BuldAction />}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  .home-page {\r\n    padding-right: 3rem;\r\n    padding-left: 3rem;\r\n    @media (max-width: 800px) {\r\n      padding-right: 0rem;\r\n      padding-left: 0rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport TaskForm from '../../components/TaskForm/TaskForm';\r\n\r\nconst AddTaskItemPage = (props) => {\r\n  console.log(props.match, props.history);\r\n  return (\r\n    <div className='add-task-container section-center'>\r\n      <Header />\r\n      <h3>New Task</h3>\r\n      <TaskForm history={props.history} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskItemPage;\r\n","import './App.css';\r\nimport { Route } from 'react-router';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport HomePage from './pages/HomePage/HomePage';\r\nimport AddTaskItemPage from './pages/AddTaskItemPage/AddTaskItemPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <BrowserRouter>\r\n        <Route\r\n          path='/'\r\n          component={({ match }) => <HomePage match={match} />}\r\n          exact={true}\r\n        />\r\n        <Route\r\n          path='/add'\r\n          component={({ match, history }) => (\r\n            <AddTaskItemPage match={match} history={history} />\r\n          )}\r\n          exact={true}\r\n        />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { TaskProvider } from './context/task_context';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <TaskProvider>\r\n      <App />\r\n    </TaskProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}